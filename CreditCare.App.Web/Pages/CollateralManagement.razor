@page "/collateralmanagement"
@using CreditCare.App.Web.Pages.Components
@using CreditCare.Domain
@inject ICollateralService CollateralService
@inject NavigationManager NavigationManager // Inject for navigation
@inject IDialogService DialogService // Inject MudBlazor's dialog service

<MudContainer>
    <MudText Typo="Typo.h5" Class="mb-4">Collateral Management</MudText>

    <MudTable Items="collaterals" RowClick="OnRowClick" Hover="true" Class="mb-4">
        <HeaderContent>
            <MudTh>Description</MudTh>
            <MudTh>Value</MudTh>
            <MudTh>Status</MudTh>
            <MudTh>Loan</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.Description</MudTd>
            <MudTd>@context.Value.ToString("C")</MudTd>
            <MudTd>@context.collateralStatus?.Name</MudTd>
            <MudTd>@context.Loan.LoanId</MudTd>
        </RowTemplate>
    </MudTable>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddCollateral">Add Collateral</MudButton>
</MudContainer>

@code {
    private IEnumerable<Collateral> collaterals = new List<Collateral>();

    protected override async Task OnInitializedAsync()
    {
        collaterals = await CollateralService.GetAllCollateralsAsync();
    }

    private void OnRowClick(Collateral collateral)
    {
        // Navigate to a detail or edit page
        NavigationManager.NavigateTo($"/collateral/{collateral.CollateralId}");
    }

    private async Task AddCollateral()
    {
        // Open a modal to add new collateral
        var parameters = new DialogParameters { { "Collateral", new Collateral() } };
        var dialog = DialogService.Show<AddEditCollateralModal>("Add Collateral", parameters); // Ensure CollateralForm is the correct modal component

        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            // Assuming result.Data contains the added Collateral
            var newCollateral = (Collateral)result.Data;
            await CollateralService.AddCollateralAsync(newCollateral);
            collaterals = await CollateralService.GetAllCollateralsAsync(); // Refresh the list
        }
    }
}
